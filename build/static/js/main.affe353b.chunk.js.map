{"version":3,"sources":["components/EstimateForm.js","components/ImpactEstimation.js","components/SevereImpactEstimation.js","components/EstimatedInfo.js","App.js","index.js"],"names":["EstimateForm","props","className","Form","onSubmit","Group","controlId","Label","Control","type","value","population","onChange","e","setPopulation","target","placeholder","min","required","timeToElapse","setTimeToElapse","reportedCases","setReportedCases","totalHospitalBeds","setTotalHospitalBeds","as","periodType","setPeriodType","Button","id","variant","size","block","ImpactEstimation","impact_data","currentlyInfected","infectionsByRequestedTime","Math","trunc","normalizePeriod","severeCasesByRequestedTime","hospitalBedsByRequestedTime","casesForICUByRequestedTime","casesForVentilatorsByRequestedTime","Table","striped","bordered","hover","Object","keys","length","colSpan","SevereImpactEstimation","severeImpact_data","EstimatedInfo","covid_data","data","period","timeToElaps","weeksInDays","monthsInDays","key","App","useState","setData","Navbar","Container","Brand","to","style","color","Row","display","flexWrap","Col","md","preventDefault","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.affe353b.chunk.js","sourcesContent":["import React from \"react\";\r\nimport { Form, Button } from 'react-bootstrap';\r\n\r\nconst EstimateForm = (props) => {\r\n\r\n  return (\r\n    <div className=\"form-wrapper\">\r\n      <Form onSubmit={(props.onSubmit)}>\r\n        <Form.Group controlId=\"data-population\">\r\n          <Form.Label>Population</Form.Label>\r\n          <Form.Control type=\"number\" value={props.population} onChange={(e)=>props.setPopulation(e.target.value)} placeholder=\"90000000\" min=\"1\"  required/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"data-time-to-elapse\">\r\n          <Form.Label>Time To Elapse</Form.Label>\r\n          <Form.Control type=\"number\" value={props.timeToElapse} onChange={(e)=>props.setTimeToElapse(e.target.value)} placeholder=\"56\" min=\"1\"  required/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"data-reported-cases\">\r\n          <Form.Label>Reported Cases</Form.Label>\r\n          <Form.Control type=\"number\" value={props.reportedCases} onChange={(e)=>props.setReportedCases(e.target.value)} placeholder=\"400000\" min=\"1\"  required/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"data-total-hospital-beds\">\r\n          <Form.Label>Total Hospital Beds</Form.Label>\r\n          <Form.Control type=\"number\" value={props.totalHospitalBeds} onChange={(e)=>props.setTotalHospitalBeds(e.target.value)} placeholder=\"90000\" min=\"1\"  required/>\r\n        </Form.Group>\r\n\r\n        <Form.Group controlId=\"data-period-type\">\r\n          <Form.Label>Period Type</Form.Label>\r\n          <Form.Control as=\"select\" value={props.periodType} onChange={(e) =>props.setPeriodType(e.target.value)}>\r\n            <option value='days'>Days</option>\r\n            <option value='weeks'>Weeks</option>\r\n            <option value='months'>Months</option>\r\n          </Form.Control>\r\n        </Form.Group>\r\n\r\n        <Button className=\"raise-button\" id=\"data-go-estimate\" variant=\"info\" size=\"lg\" block=\"block\" type=\"submit\">\r\n          Go Estimate\r\n        </Button>\r\n      </Form> \r\n    </div>\r\n    );\r\n}\r\n\r\nexport default EstimateForm;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\n\r\nconst ImpactEstimation = (props) => {\r\n    const impact_data = props.impact_data;\r\n    const currentlyInfected = impact_data.reportedCases * 10;\r\n    const infectionsByRequestedTime = Math.trunc(currentlyInfected * props.normalizePeriod(impact_data.periodType, impact_data.timeToElapse));\r\n    const severeCasesByRequestedTime = Math.trunc(infectionsByRequestedTime * 0.15);\r\n    const hospitalBedsByRequestedTime = Math.trunc(impact_data.totalHospitalBeds - severeCasesByRequestedTime);\r\n    const casesForICUByRequestedTime = Math.trunc(infectionsByRequestedTime * 0.05);\r\n    const casesForVentilatorsByRequestedTime = Math.trunc(infectionsByRequestedTime * 0.02);\r\n    return (\r\n        <>\r\n            <h2>Impact Estimation</h2>\r\n            <Table striped bordered hover>\r\n            <thead>\r\n            <tr className=\"blue-color\">\r\n                <th>Currently Infected</th>\r\n                <th>Infections By Requested Time</th>\r\n                <th>Severe Cases By Requested Time</th>\r\n                <th>Hospital Beds By Requested Time</th>\r\n                <th>Cases For ICU By Requested Time</th>\r\n                <th>Cases For Ventilators By Requested Time</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {Object.keys(impact_data).length > 0 ? (\r\n                <tr>\r\n                    <td>{currentlyInfected}</td>\r\n                    <td>{infectionsByRequestedTime}</td>\r\n                    <td>{severeCasesByRequestedTime}</td>\r\n                    <td>{hospitalBedsByRequestedTime}</td>\r\n                    <td>{casesForICUByRequestedTime}</td>\r\n                    <td>{casesForVentilatorsByRequestedTime}</td>\r\n                </tr>\r\n            ) : (\r\n                <tr>\r\n                <td colSpan={3}>No Data</td>\r\n                </tr>\r\n            )}\r\n            </tbody>\r\n        </Table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default ImpactEstimation;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\n\r\nconst SevereImpactEstimation = (props) => {\r\n    const severeImpact_data = props.severeImpact_data;\r\n    const currentlyInfected = severeImpact_data.reportedCases * 50;\r\n    const infectionsByRequestedTime = Math.trunc(currentlyInfected * props.normalizePeriod(severeImpact_data.periodType, severeImpact_data.timeToElapse));\r\n    const severeCasesByRequestedTime = Math.trunc(infectionsByRequestedTime * 0.15);\r\n    const hospitalBedsByRequestedTime = Math.trunc(severeImpact_data.totalHospitalBeds - severeCasesByRequestedTime);\r\n    const casesForICUByRequestedTime = Math.trunc(infectionsByRequestedTime * 0.05);\r\n    const casesForVentilatorsByRequestedTime = Math.trunc(infectionsByRequestedTime * 0.02);\r\n    return (\r\n        <>\r\n            <h2>Severe Impact Estimation</h2>\r\n            <Table striped bordered hover>\r\n            <thead>\r\n            <tr className=\"blue-color\">\r\n                <th>Currently Infected</th>\r\n                <th>Infections By Requested Time</th>\r\n                <th>Severe Cases By Requested Time</th>\r\n                <th>Hospital Beds By Requested Time</th>\r\n                <th>Cases For ICU By Requested Time</th>\r\n                <th>Cases For Ventilators By Requested Time</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {Object.keys(severeImpact_data).length > 0 ? (\r\n                <tr>\r\n                    <td>{currentlyInfected}</td>\r\n                    <td>{infectionsByRequestedTime}</td>\r\n                    <td>{severeCasesByRequestedTime}</td>\r\n                    <td>{hospitalBedsByRequestedTime}</td>\r\n                    <td>{casesForICUByRequestedTime}</td>\r\n                    <td>{casesForVentilatorsByRequestedTime}</td>\r\n                </tr>\r\n            ) : (\r\n                <tr>\r\n                <td colSpan={3}>No Data</td>\r\n                </tr>\r\n            )}\r\n            </tbody>\r\n        </Table>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default SevereImpactEstimation;","import React from 'react';\r\nimport { Table } from 'react-bootstrap';\r\nimport ImpactEstimation from './ImpactEstimation';\r\nimport SevereImpactEstimation from './SevereImpactEstimation';\r\n\r\nconst EstimatedInfo = (props) => {\r\n    const covid_data = props.data;\r\n\r\n    const normalizePeriod = (period, timeToElapse) => {\r\n      let timeToElaps = 2 ** Math.trunc(timeToElapse / 3);\r\n      const weeksInDays = timeToElapse * 7;\r\n      const monthsInDays = timeToElapse * 30;\r\n      switch (period) {\r\n        case 'days':\r\n          return timeToElaps;\r\n        case 'weeks':\r\n          timeToElaps = 2 ** Math.trunc(weeksInDays / 3);\r\n          return timeToElaps;\r\n        case 'months':\r\n          timeToElaps = 2 ** Math.trunc(monthsInDays / 3);\r\n          return timeToElaps;\r\n        default:\r\n          return timeToElapse;\r\n      }\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <h2>Data To Estimate</h2>\r\n            <Table striped bordered hover>\r\n            <thead>\r\n            <tr className=\"blue-color\">\r\n                <th>Population</th>\r\n                <th>Time To Elapse</th>\r\n                <th>Reported Cases</th>\r\n                <th>Total Hospital Beds</th>\r\n                <th>Period Type</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {Object.keys(covid_data).length > 0 ? (\r\n                <tr key={1}>\r\n                    <td>{covid_data.population}</td>\r\n                    <td>{covid_data.timeToElapse}</td>\r\n                    <td>{covid_data.reportedCases}</td>\r\n                    <td>{covid_data.totalHospitalBeds}</td>\r\n                    <td>{covid_data.periodType}</td>\r\n                </tr>\r\n            ) : (\r\n                <tr>\r\n                <td colSpan={3}>No users</td>\r\n                </tr>\r\n            )}\r\n            </tbody>\r\n            </Table>\r\n            <ImpactEstimation\r\n                normalizePeriod={normalizePeriod}\r\n                impact_data={covid_data}\r\n            />\r\n            <SevereImpactEstimation\r\n                normalizePeriod={normalizePeriod}\r\n                severeImpact_data={covid_data}\r\n            />\r\n        </>\r\n    );\r\n}\r\n\r\nexport default EstimatedInfo;","import React, { useState } from \"react\";\r\nimport {\r\n  Row,\r\n  Col,\r\n  Container,\r\n  Navbar\r\n} from \"react-bootstrap\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.css\";\r\nimport \"./App.css\";\r\n\r\nimport { BrowserRouter as Router, Link } from \"react-router-dom\";\r\nimport EstimateForm from \"./components/EstimateForm\";\r\nimport EstimatedInfo from \"./components/EstimatedInfo\";\r\n\r\nfunction App() {\r\n\r\n  const [population, setPopulation] = useState(47000000);\r\n  const [timeToElapse, setTimeToElapse] = useState(28);\r\n  const [reportedCases, setReportedCases] = useState(1760);\r\n  const [totalHospitalBeds, setTotalHospitalBeds] = useState(70000);\r\n  const [periodType, setPeriodType] = useState('days');\r\n\r\n  const [data, setData] = useState({\r\n    population: population,\r\n    timeToElapse: timeToElapse,\r\n    reportedCases: reportedCases,\r\n    totalHospitalBeds: totalHospitalBeds,\r\n    periodType:periodType\r\n  });\r\n\r\n  const onSubmit = (e) => {\r\n    e.preventDefault();\r\n    setData({ population, timeToElapse, reportedCases, totalHospitalBeds, periodType });\r\n    console.log(data);\r\n  };\r\n\r\n  return (\r\n    <Router>\r\n    <div className=\"App\">\r\n      <header className=\"App-header\" >\r\n        <Navbar variant=\"light\">\r\n          <Container >\r\n            <Navbar.Brand>\r\n              <Link to={\"/\"} style={{color: '#007bff'}}>\r\n                Covid19 Estimator\r\n              </Link>\r\n            </Navbar.Brand>\r\n          </Container>\r\n        </Navbar>\r\n      </header>\r\n\r\n      <Container>\r\n        <Row style={{display:'flex', flexWrap: 'noWrap'}}>\r\n          <Col md={12} className=\"column-one\">\r\n              <div className=\"wrapper\">\r\n                <EstimateForm\r\n                  population={population}\r\n                  timeToElapse={timeToElapse}\r\n                  reportedCases={reportedCases}\r\n                  totalHospitalBeds={totalHospitalBeds}\r\n                  periodType={periodType}\r\n                  onSubmit={onSubmit} data={data}\r\n                  setPopulation={setPopulation}\r\n                  setTimeToElapse={setTimeToElapse}\r\n                  setReportedCases={setReportedCases}\r\n                  setTotalHospitalBeds={setTotalHospitalBeds}\r\n                  setPeriodType={setPeriodType}\r\n                />    \r\n            </div>\r\n            </Col>\r\n            <Col md={12} className=\"column-one\">\r\n              <div className=\"wrapper\">\r\n                <EstimatedInfo\r\n                  data={data}\r\n                />\r\n            </div>\r\n          </Col>\r\n        </Row>\r\n      </Container>\r\n    </div>\r\n  </Router>\r\n  );\r\n}\r\n\r\nexport default App;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { BrowserRouter } from \"react-router-dom\";\r\n\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(\r\n  <BrowserRouter>\r\n    <App />\r\n  </BrowserRouter>,\r\n  document.getElementById(\"root\")\r\n);\r\n"],"sourceRoot":""}